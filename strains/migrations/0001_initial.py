# Generated by Django 5.1.5 on 2025-04-13 19:50

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StrainModel',
            fields=[
                ('strain_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Счетчик')),
                ('CollectionCode', models.CharField(max_length=255, null=True, verbose_name='CollectionCode')),
                ('Subcollection', models.CharField(max_length=255, null=True, verbose_name='Subcollection')),
                ('Subcollection1', models.CharField(max_length=255, null=True, verbose_name='Subcollection1')),
                ('Genus', models.CharField(max_length=255, null=True, verbose_name='Genus')),
                ('Species', models.CharField(max_length=255, null=True, verbose_name='Species')),
                ('Variant', models.CharField(blank=True, max_length=255, null=True, verbose_name='Variant')),
                ('Forma', models.CharField(blank=True, max_length=255, null=True, verbose_name='Forma')),
                ('FormaSpecies', models.CharField(blank=True, max_length=255, null=True, verbose_name='FormaSpecies')),
                ('Strain', models.IntegerField(null=True, verbose_name='Strain')),
                ('AuthoritySp', models.CharField(max_length=255, null=True, verbose_name='AuthoritySp')),
                ('AuthoritySubSp', models.CharField(blank=True, max_length=255, null=True, verbose_name='AuthoritySubSp')),
                ('Family', models.CharField(blank=True, max_length=255, null=True, verbose_name='Family')),
                ('Order', models.CharField(blank=True, max_length=255, null=True, verbose_name='Order')),
                ('Class', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class')),
                ('Synonym', models.TextField(blank=True, null=True, verbose_name='Synonym')),
                ('TaxonomicID', models.IntegerField(blank=True, null=True, verbose_name='TaxonomicID (DSMZ, MycoBank)')),
                ('CurrentName', models.CharField(blank=True, max_length=255, null=True, verbose_name='Current Name (DSMZ, MycoBank)')),
                ('Link_to_TaxonomicID', models.CharField(blank=True, max_length=255, null=True, verbose_name='Link to TaxonomicID (DSMZ, MycoBank Website)')),
                ('Pathogenicgroup', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pathogenicgroup (Russian Federation)')),
                ('RiskGroup', models.CharField(blank=True, max_length=255, null=True, verbose_name='Risk group')),
                ('SanPin', models.CharField(blank=True, max_length=255, null=True, verbose_name='SanPin')),
                ('State', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('TypeRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='TypeRus')),
                ('TypeEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='TypeEng')),
                ('Qouts', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qouts')),
                ('OtherName', models.CharField(blank=True, max_length=255, null=True, verbose_name='OtherName')),
                ('ClassShort', models.CharField(blank=True, max_length=255, null=True, verbose_name='ClassShort')),
                ('References', models.TextField(blank=True, null=True, verbose_name='References')),
                ('References_nc', models.TextField(blank=True, null=True, verbose_name='References-nc')),
                ('Race', models.CharField(blank=True, max_length=255, null=True, verbose_name='Race')),
                ('Serovar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Serovar')),
                ('OtherCol', models.TextField(blank=True, null=True, verbose_name='OtherCol')),
                ('ReceivedFromRus', models.CharField(max_length=255, null=True, verbose_name='ReceivedFromRus')),
                ('ReceivedFromEng', models.CharField(max_length=255, null=True, verbose_name='ReceivedFromEng')),
                ('DepositorRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='DepositorRus')),
                ('DepositorEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='DepositorEng')),
                ('ReceivedAs', models.CharField(max_length=255, null=True, verbose_name='ReceivedAs')),
                ('ReceivedDate', models.DateField(blank=True, null=True, verbose_name='ReceivedDate')),
                ('AccessionDate', models.DateField(blank=True, max_length=255, null=True, verbose_name='AccessionDate')),
                ('TypeOfSubstrateRus', models.CharField(max_length=255, null=True, verbose_name='TypeOfSubstrateRus')),
                ('TypeOfSubstrateEng', models.CharField(max_length=255, null=True, verbose_name='TypeOfSubstrateEng')),
                ('IsolatedFromRus', models.CharField(max_length=255, null=True, verbose_name='IsolatedFromRus')),
                ('IsolatedFromEng', models.CharField(max_length=255, null=True, verbose_name='IsolatedFromEng')),
                ('AnatomicPartRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='AnatomicPartRus')),
                ('AnatomicPartEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='AnatomicPartEng')),
                ('LocationRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='LocationRus')),
                ('LocationEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='LocationEng')),
                ('GeographicsRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='GeographicsRus')),
                ('GeographicsEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='GeographicsEng')),
                ('CountryRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='CountryRus')),
                ('CountryEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='CountryEng')),
                ('USSR', models.CharField(blank=True, max_length=255, null=True, verbose_name='USSR')),
                ('CollectedByRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='CollectedByRus')),
                ('CollectedByEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='CollectedByEng')),
                ('CollectedDate', models.DateField(blank=True, null=True, verbose_name='CollectedDate')),
                ('IsolationDate', models.DateField(blank=True, null=True, verbose_name='IsolationDate')),
                ('IsolatedByRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='IsolatedByRus')),
                ('IsolatedByEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='IsolatedByEng')),
                ('IsolateNumberRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='IsolateNumberRus')),
                ('IsolateNumberEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='IsolateNumberEng')),
                ('IdentificateByRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='IdentificateByRus')),
                ('IdentificateByEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='IdentificateByEng')),
                ('IdentificateDate', models.CharField(blank=True, max_length=255, null=True, verbose_name='IdentificateDate')),
                ('IncubationTemp', models.IntegerField(null=True, verbose_name='IncubationTemp')),
                ('Tested_temperature_growth_range', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tested temperature growth range')),
                ('GrowthMedium', models.IntegerField(null=True, verbose_name='GrowthMedium')),
                ('GrowthConditionRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='GrowthConditionRus')),
                ('GrowthConditionEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='GrowthConditionEng')),
                ('StorageMethods', models.CharField(max_length=255, null=True, verbose_name='StorageMethods')),
                ('StorageFreeze', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageFreeze')),
                ('StorageOil', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageOil')),
                ('StorageSilicagel', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageSilicagel')),
                ('StorageWater', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageWater')),
                ('StorageNitrogen', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageNitrogen')),
                ('StorageSubcultivation', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageSubcultivation')),
                ('StorageSoil', models.CharField(blank=True, max_length=255, null=True, verbose_name='StorageSoil')),
                ('EnzymeProductionEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='EnzymeProductionEng')),
                ('MetaboliteProductionEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='MetaboliteProductionEng')),
                ('TransformationEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='TransformationEng')),
                ('DegradationEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='DegradationEng')),
                ('OtherRus', models.TextField(blank=True, null=True, verbose_name='OtherRus')),
                ('OtherEng', models.TextField(blank=True, null=True, verbose_name='OtherEng')),
                ('MatingType', models.CharField(blank=True, max_length=255, null=True, verbose_name='MatingType')),
                ('DNA_Sequence_Accession_Numbers', models.CharField(blank=True, max_length=255, null=True, verbose_name='DNA Sequence Accession Numbers')),
                ('Latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('Longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('Altitude', models.CharField(blank=True, max_length=255, null=True, verbose_name='Altitude')),
                ('Curator', models.CharField(max_length=255, null=True, verbose_name='Curator')),
                ('Category', models.CharField(blank=True, max_length=255, null=True, verbose_name='Category')),
                ('Restrictions_on_use', models.CharField(blank=True, max_length=255, null=True, verbose_name='Restrictions on use')),
                ('Remarks', models.CharField(max_length=255, verbose_name='Remarks')),
                ('EntryDate', models.DateField(blank=True, null=True, verbose_name='EntryDate')),
                ('EditDate', models.DateField(blank=True, null=True, verbose_name='EditDate')),
                ('ReidentifRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='ReidentifRus')),
                ('ReidentifEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='ReidentifEng')),
                ('Confidential_Information', models.CharField(blank=True, max_length=255, null=True, verbose_name='Confidential Information')),
                ('ApplicationRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='ApplicationRus')),
                ('ApplicationEng', models.CharField(blank=True, max_length=255, null=True, verbose_name='ApplicationEng')),
                ('Form_of_supply', models.CharField(blank=True, max_length=255, null=True, verbose_name='Form of supply')),
                ('Report2020', models.CharField(blank=True, max_length=255, null=True, verbose_name='Report2020')),
                ('Report2021', models.CharField(blank=True, max_length=255, null=True, verbose_name='Report2021')),
                ('EnzymeProductionRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='EnzymeProductionRus')),
                ('MetaboliteProductionRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='MetaboliteProductionRus')),
                ('TransformationRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='TransformationRus')),
                ('DegradationRus', models.CharField(blank=True, max_length=255, null=True, verbose_name='DegradationRus')),
                ('search_taxon_name_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('search_isolated_from_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('search_geographics_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('search_country_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('search_any_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'verbose_name_plural': 'strains',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_taxon_name_vector'], name='strains_str_search__665407_gin'), django.contrib.postgres.indexes.GinIndex(fields=['search_isolated_from_vector'], name='strains_str_search__2a248f_gin'), django.contrib.postgres.indexes.GinIndex(fields=['search_geographics_vector'], name='strains_str_search__5e84d2_gin'), django.contrib.postgres.indexes.GinIndex(fields=['search_country_vector'], name='strains_str_search__4a6add_gin'), django.contrib.postgres.indexes.GinIndex(fields=['search_any_vector'], name='strains_str_search__1cbf6c_gin')],
            },
        ),
        migrations.CreateModel(
            name='StrainChangeRequestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to=settings.AUTH_USER_MODEL)),
                ('strain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='strains.strainmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StrainNewRequestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
